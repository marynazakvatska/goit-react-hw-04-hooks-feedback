{"version":3,"sources":["components/FeedBackOptions/FeedBackOptions.module.css","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedBackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","components/Counter/Counter.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","btns","onLeaveFeedback","map","btn","index","className","s","type","onClick","Statistics","good","neutral","bad","total","positiveFeedPercentage","list","Notification","message","Section","title","children","section","defaultProps","Counter","useState","setGood","setNeutral","setBad","countTotal","stateGood","stateNeutral","stateBad","Math","round","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,IAAM,+B,gBCAxBD,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,QAAU,2B,+KC4BbC,EAzBS,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBAE/B,OACE,8BACGD,EAAKE,KAAI,SAACC,EAAKC,GAAN,OACR,wBACEC,UAAWC,IAAEH,IAEbI,KAAK,SACLC,QAAS,kBAAMP,EAAgBE,IAJjC,SAMGA,GAJIC,S,gBCWAK,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,uBAA9B,OACjB,qBAAIT,UAAWC,IAAES,KAAjB,UACE,uCAAUL,EAAV,OACA,0CAAaC,EAAb,OACA,sCAASC,EAAT,OACA,wCAAWC,KACX,oDAAuBC,EAAvB,WCGWE,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,8BACE,4BAAIA,O,wBCDFC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,sBAAKf,UAAWC,IAAEe,QAAlB,UACE,6BAAKF,IACJC,MAILF,EAAQI,aAAe,CACrBH,MAAO,IAQMD,QCZA,SAASK,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOd,EAAP,KAAae,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOb,EAAP,KAAgBe,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOZ,EAAP,KAAYe,EAAZ,KAsBMC,EAAa,WACjB,OAAOlB,EAAOC,EAAUC,GAQ1B,OACE,gCACE,cAAC,EAAD,CAASO,MAAM,6BAAf,SACE,cAAC,EAAD,CACEnB,KAAM,CAAC,OAAQ,UAAW,OAC1BC,gBAhCW,SAACE,GAElB,OAAQA,GACN,IAAK,OACHsB,GAAQ,SAAAI,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHH,GAAW,SAAAI,GAAY,OAAIA,EAAe,KAC1C,MACF,IAAK,MACHH,GAAO,SAAAI,GAAQ,OAAIA,EAAW,KAC9B,MAEF,QAAS,aAuBT,cAAC,EAAD,CAASZ,MAAM,aAAf,SACGS,IACC,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOe,IACPd,uBApBFkB,KAAKC,MAAc,IAAPvB,EAAakB,OAuBzB,cAAC,EAAD,CAAcX,QAAQ,2BCjDjBiB,MARf,WACE,OACE,8BACE,cAACX,EAAD,OCFNY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a5d34892.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedBackOptions_btn__1dJ3c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3NHXR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2OTfa\"};","import React from \"react\";\nimport s from \"./FeedBackOptions.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackOptions = ({ btns, onLeaveFeedback }) => {\n /*  const btns = Object.keys(options); */\n  return (\n    <div>\n      {btns.map((btn, index) => (\n        <button\n          className={s.btn}\n          key={index}\n          type=\"button\"\n          onClick={() => onLeaveFeedback(btn)}\n        >\n          {btn}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.string.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n  btn: PropTypes.node.isRequired,\n  index: PropTypes.node.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positiveFeedPercentage }) => (\n  <ul className={s.list}>\n    <li>Good:{good} </li>\n    <li>Neutral:{neutral} </li>\n    <li>Bad:{bad} </li>\n    <li>Total:{total}</li>\n    <li>Positive feedback:{positiveFeedPercentage}%</li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => (\n  <div>\n    <p>{message}</p>\n  </div>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => (\n  <div className={s.section}>\n    <h2>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.defaultProps = {\n  title: \"\",\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import {useState, useEffect} from \"react\";\n\nimport FeedbackOptions from \"../FeedBackOptions/FeedbackOptions\";\nimport Statistics from \"../Statistics/Statistics\";\nimport Notification from \"../Notification/Notification\";\nimport s from \"./Counter.module.css\";\nimport Section from \"../Section/Section\";\n\nexport default function Counter() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0)\n \n\n\n   const increment = (btn) => {\n   \n    switch (btn) {\n      case 'good':\n        setGood(stateGood => stateGood + 1);\n        break;\n      case 'neutral':\n        setNeutral(stateNeutral => stateNeutral + 1);\n        break;\n      case 'bad':\n        setBad(stateBad => stateBad + 1);\n        break;\n      \n      default: return;\n    }\n    } \n  \n  \n  const countTotal = () => {\n    return good + neutral + bad;\n  };\n\n  const positivePercentage = () => {\n   return Math.round((good * 100) /countTotal())};\n\n\n\n  return (\n    <div>\n      <Section title=\"Please leave your feedback\">\n        <FeedbackOptions\n          btns={['good', 'neutral', 'bad']}\n          onLeaveFeedback={increment}\n        />\n      </Section>\n\n      <Section title=\"Statictics\">\n        {countTotal() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotal()}\n            positiveFeedPercentage={positivePercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n  \n  }\n\n\n","import React from \"react\";\nimport \"./App.css\";\nimport Counter from \"./components/Counter/Counter\";\n\nfunction App() {\n  return (\n    <div>\n      <Counter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}